#!/bin/sh 

##SBATCH -p test         # short jobs, time limit 8 hours
#SBATCH -p huce_intel   # cheap, slower, no time limit
##SBATCH -p huce_cascade # expensive, faster, no time limit
##SBATCH -p shared       # longer jobs, 7 days, use only when needed

#SBATCH -N 1 # number of nodes
#SBATCH -n 1 # number of cores
#SBATCH --mem-per-cpu=8GB # memory pool for each core
#SBATCH -t 0-07:00 # time (D-HH:MM)

#SBATCH -J "SAM_bin2nc"
#SBATCH --mail-user=
#SBATCH --mail-type=ALL
#SBATCH -o ./LOGS/bin2nc.%j.out # STDOUT
#SBATCH -e ./LOGS/bin2nc.%j.err # STDERR

module purge
module load intel/19.0.5-fasrc01 impi/2019.5.281-fasrc01 netcdf/4.1.3-fasrc02

cd ./OUT_3D

for fbin3D in *.bin3D
do
    if bin3D2nc "$fbin3D" >& /dev/null
    then
        echo "Processing SAM bin3D output file $fbin3D ... done"
        rm "$fbin3D"
    else
        echo "Processing SAM bin3D output file $fbin3D ... failed"
    fi
done

cd ../OUT_2D

for f2Dbin in *.2Dbin
do
    if 2Dbin2nc "$f2Dbin" >& /dev/null
    then
        echo "Processing SAM 2Dcom output file $f2Dbin ... done"
        rm "$f2Dbin"
    else
        echo "Processing SAM 2Dcom output file $f2Dbin ... failed"
    fi
done

cd ../OUT_STAT

for fstat in *.stat
do
    if stat2nc "$fstat" >& /dev/null
    then
        echo "Processing SAM 2Dcom output file $fstat ... done"
        rm "$fstat"
    else
        echo "Processing SAM 2Dcom output file $fstat ... failed"
    fi
done

cd ..

exit 0
